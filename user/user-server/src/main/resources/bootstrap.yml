spring:
  application:
    name: user
  cloud:
    config:
      # 1. 当同时配置了spring.cloud.config.name和spring.application.name，使用spring.cloud.config.name
      # 2. 当未配置spring.cloud.config.name，使用spring.application.name
#      name: userb
      discovery:
        enabled: true
        # config server id
        service-id: CONFIG
      # The default profile to use when fetching remote configuration (comma-separated). Default is "default".
      # 拉取远程配置文件，英文逗号分隔，格式为：应用名-profile.yml，如：user-dev.yml
      # 1. 当同时配置了spring.cloud.config.profile和spring.profiles.active，使用spring.cloud.config.profile
      # 2. 当未配置spring.cloud.config.profile，使用spring.profiles.active
      # 3. 建议注释掉这个，使用spring.profiles.active，这样才会打印日志
#      profile: dev
  profiles:
    # 1. 当配置此项时（dev/test/prod），日志才会输出（因为使用了logback日志）：The following profiles are active: dev/test/prod，spring.cloud.config.profile 此项可以不用配置
    # 2. 当未配置此项或配置为空（如：${config.active:}），默认为default,且不打印日志
    # 3. 当配置为：dev, test, prod时，打印日志
    active: ${config.active:dev}

# 日志配置
logging:
  # 日志配置文件路径
  #  config: https://wenewrs-oss-data.oss-cn-shanghai-internal.aliyuncs.com/config/logback.xml
  # 日志级别配置
  level:
    # 默认日志打印级别，即ROOT
    ROOT: INFO
    # 指定名名所使用的日志级别
    org.springframework: INFO
    org.springframework.cloud.sleuth: INFO
    springfox: WARN
    com.netflix: WARN
    com.vic: INFO
    com.vic.repository: INFO
    # 调试使用
  #    org: trace
  file:
    path: /Users/admin/logs/backup
    name: /Users/admin/logs/exotic-harpoon/${spring.application.name}.log
  # 日志模块
  pattern:
    # 控制台的日志模式
    console: '%d{yyyy-MM-dd HH:mm:ss} - [${spring.application.name:},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}] - %msg%n'
    # 日志记录模式文件
    file: '%d{yyyy-MM-dd HH:mm:ss} [%thread] - [${spring.application.name:},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}] - %-5level %logger{36} - %msg%n'
